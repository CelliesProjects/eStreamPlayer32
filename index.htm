<!doctype html>
<html lang="en">
<head>
<script>
//setting for dev/debug */
const debugip="192.168.0.105";  //change this to the esp32 ip for remote running of this page
</script>
<meta charset="utf-8">
<meta name="viewport" content="minimal-ui,width=device-width,initial-scale=1.0,user-scalable=no" />
<link rel="icon" href="data:;base64,iVBORw0KGgo="><!--prevent favicon requests-->
<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<title>eStreamPlayer32</title>
<meta name="description" content="eStreamPlayer32 interface">
<meta name="author" content="Cellie">
<script>!function(a,b){"function"==typeof define&&define.amd?define([],b):"undefined"!=typeof module&&module.exports?module.exports=b():a.ReconnectingWebSocket=b()}(this,function(){function a(b,c,d){function l(a,b){var c=document.createEvent("CustomEvent");return c.initCustomEvent(a,!1,!1,b),c}var e={debug:!1,automaticOpen:!0,reconnectInterval:1e3,maxReconnectInterval:3e4,reconnectDecay:1.5,timeoutInterval:2e3};d||(d={});for(var f in e)this[f]="undefined"!=typeof d[f]?d[f]:e[f];this.url=b,this.reconnectAttempts=0,this.readyState=WebSocket.CONNECTING,this.protocol=null;var h,g=this,i=!1,j=!1,k=document.createElement("div");k.addEventListener("open",function(a){g.onopen(a)}),k.addEventListener("close",function(a){g.onclose(a)}),k.addEventListener("connecting",function(a){g.onconnecting(a)}),k.addEventListener("message",function(a){g.onmessage(a)}),k.addEventListener("error",function(a){g.onerror(a)}),this.addEventListener=k.addEventListener.bind(k),this.removeEventListener=k.removeEventListener.bind(k),this.dispatchEvent=k.dispatchEvent.bind(k),this.open=function(b){h=new WebSocket(g.url,c||[]),b||k.dispatchEvent(l("connecting")),(g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","attempt-connect",g.url);var d=h,e=setTimeout(function(){(g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","connection-timeout",g.url),j=!0,d.close(),j=!1},g.timeoutInterval);h.onopen=function(){clearTimeout(e),(g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","onopen",g.url),g.protocol=h.protocol,g.readyState=WebSocket.OPEN,g.reconnectAttempts=0;var d=l("open");d.isReconnect=b,b=!1,k.dispatchEvent(d)},h.onclose=function(c){if(clearTimeout(e),h=null,i)g.readyState=WebSocket.CLOSED,k.dispatchEvent(l("close"));else{g.readyState=WebSocket.CONNECTING;var d=l("connecting");d.code=c.code,d.reason=c.reason,d.wasClean=c.wasClean,k.dispatchEvent(d),b||j||((g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","onclose",g.url),k.dispatchEvent(l("close")));var e=g.reconnectInterval*Math.pow(g.reconnectDecay,g.reconnectAttempts);setTimeout(function(){g.reconnectAttempts++,g.open(!0)},e>g.maxReconnectInterval?g.maxReconnectInterval:e)}},h.onmessage=function(b){(g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","onmessage",g.url,b.data);var c=l("message");c.data=b.data,k.dispatchEvent(c)},h.onerror=function(b){(g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","onerror",g.url,b),k.dispatchEvent(l("error"))}},1==this.automaticOpen&&this.open(!1),this.send=function(b){if(h)return(g.debug||a.debugAll)&&console.debug("ReconnectingWebSocket","send",g.url,b),h.send(b);throw"INVALID_STATE_ERR : Pausing to reconnect websocket"},this.close=function(a,b){"undefined"==typeof a&&(a=1e3),i=!0,h&&h.close(a,b)},this.refresh=function(){h&&h.close()}}return a.prototype.onopen=function(){},a.prototype.onclose=function(){},a.prototype.onconnecting=function(){},a.prototype.onmessage=function(){},a.prototype.onerror=function(){},a.debugAll=!1,a.CONNECTING=WebSocket.CONNECTING,a.OPEN=WebSocket.OPEN,a.CLOSING=WebSocket.CLOSING,a.CLOSED=WebSocket.CLOSED,a});</script>
<!-- https://www.w3schools.com/howto/howto_js_tabs.asp -->
<style>
*{box-sizing:border-box;}
html,body{
  position:absolute;
  top:0;
  bottom:0;
  left:0;
  right:0;
  margin:0;
  padding:0;
  background:#f1f1f1;
  text-align:center;
  font-family:'Roboto',sans-serif;
  overflow:hidden;
}
.noselect{
  -webkit-touch-callout:none; /* iOS Safari */
    -webkit-user-select:none; /* Safari */
     -khtml-user-select:none; /* Konqueror HTML */
       -moz-user-select:none; /* Firefox */
        -ms-user-select:none; /* Internet Explorer/Edge */
            user-select:none; /* Non-prefixed version,currently
                                  supported by Chrome and Opera */
}
a{
  color:black;
  text-decoration:none;
}
#locationbar{
  margin:0;
  white-space:nowrap;
  padding:0 8px;
}
#infobar{
  margin:0;
  overflow:hidden;
  white-space:nowrap;
}
.tab{
  overflow:auto;
}
#tabbar{
  overflow:unset;
  width:max-content;
  overflow-y:unset;
}
.tab button{
  background-color:lightgrey;
  float:left;
  border:none;
  outline:none;
  cursor:pointer;
  padding:10px 20px;
  transition:0.3s;
  padding:10px 20px;
  transition:0.3s;
  margin:0 5px;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  border-bottom-left-radius:0;
  border-bottom-right-radius:0;
}
.tab button:hover{
  background-color:#ddd;
}
.tabcontent{
  width:50%;
  overflow-y:scroll;
  text-align:left;
  position:absolute;
  bottom:0;
  left:0;
  right:0;
  border:none;
  background:darkgrey;
}
#HOME{
  width:100%;
  overflow-y:hidden;
}
#PLAYLIST{
  right:0;
  left:50%;
}
#uplink,.folderlink,.sdfolderlink,.filelink,.streamlink,.plitem,.favoritelink,.errormessage{
  background:grey;
  color:black;
  margin:2px 0;
  font-size:20px;
  padding:2px 10px;
  align-items:center;
  overflow:hidden;
  white-space:nowrap;
  display:list-item;
}
.foldericon,.icon{
  width:30px;
  height:30px;
  vertical-align:middle;
  margin:2px 5px;
}
.foldericon:hover,.icon:hover,.plitem:hover,#uplink:hover,.folderlink:hover,.filelink:hover,.streamlink:hover,.favoritelink:hover{
  cursor:pointer;
  background:lightgrey;
}
#showstation,#streamtitle,#streaminfo{
  text-align:center;
  margin:15px;
  overflow:hidden;
  font-size:25px;
}
.text{
  margin:10px;
  vertical-align:middle;
}
#newurlbar{
  position:absolute;
  bottom:0;
  left:0;
  right:0;
  height:40px;
  display:flex;
  margin:0;
}
#newurl{
  height:100%;
  width:-webkit-fill-available;
  text-align:center;
  font-size:20px;
}
#newurlbutton{
  height:100%;
  padding:0 20px;
  font-size:20px;
}
#controlpanel{
  position:absolute;
  bottom:0;
  left:0;
  right:0;
  background:inherit;
}
#playerstatus{
  margin:0;
  overflow:hidden;
  white-space:nowrap;
}
.playercontrol{
  display:inline;
}
#volumeslider{
  vertical-align:middle
}
.addfolder:hover,.starticon:hover{
  border:solid 1px black;
  border-radius:5px;
}
.deletebutton:hover{
  border:solid 1px black;
  border-radius:5px;
  background:red;
}
#overlay{
  display:none;
  position:absolute;
  left:15%;
  right:15%;
  top:35px;
  background:cadetblue;
  color:inherit;
  border-radius:10px;
  -webkit-box-shadow:0 0 20px black;
  -moz-box-shadow:0 0 20px black;
  box-shadow:0 0 20px black;
}
#overlay:hover{
  cursor:pointer;
}
</style>
</head>
<body class="noselect">
  <p id="locationbar">&nbsp;</p>
  <p id="infobar">&nbsp;</p>
<div class="tab">
  <div id="tabbar">
  <button class="tablinks" id="librarybutton">LIBRARY</button>
  <button class="tablinks">WEBRADIO</button>
  <button class="tablinks">FAVORITES</button>
  </div>
</div>
<div id="PLAYLIST" class="tabcontent">
  <p class="errormessage">Waiting for playlist...</p>
</div>
<div id="LIBRARY" class="tabcontent">
  <p class="errormessage"><svg class="icon" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z"/></svg>connect to library...</p>
</div>
<div id="WEBRADIO" class="tabcontent">
</div>
<div id="FAVORITES" class="tabcontent">
  <p class="errormessage">Waiting for favorites...</p>
</div>
<div id="overlay">
  <h3 id="showstation"></h3>
  <p id="streamtitle"></p>
</div>
<p id="newurlbar"><input type="text" id="newurl" placeholder="Enter a URL"><input id="newurlbutton" type="submit" value="Play URL"></p>
<div id="controlpanel">
  <p id="playerstatus">eStreamPlayer32</p>
  <p class="playercontrol"><svg class="icon" id="previousbutton" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M6 6h2v12H6zm3.5 6l8.5 6V6z"/><path d="M0 0h24v24H0z" fill="none"/></svg></p>
  <p class="playercontrol" id="playpause"><svg class="icon" id="pausebutton" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/><path d="M0 0h24v24H0z" fill="none"/></svg></p>
  <p class="playercontrol"><svg class="icon" id="nextbutton" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"/><path d="M0 0h24v24H0z" fill="none"/></svg></p>
  <!--<p class="playercontrol"><svg class="icon" id="volumebutton" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"><path d="M0 0h24v24H0z" fill="none"/><path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/></svg></p>-->
  <input class="playercontrol" type="range" min="0" max="21" class="" id="volumeslider" autocomplete="off">
  <p class="playercontrol"><svg class="icon" id="clearbutton" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z"/><path fill="none" d="M0 0h24v24H0z"/></svg></p>
</div>
<script>
const http_host = "http://" + (window.location.hostname ? window.location.hostname : debugip);
const ws_host = "ws://" + (window.location.hostname ? window.location.hostname : debugip) + "/ws";
const erroricon = '<svg class="icon" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/></svg>';

var libraryURL = "";


var currentpath='/';
var scrollPos=[]; //array to keep track of nested folders

function updateLocationBar(){
  $('#locationbar').html("Library path: " + currentpath);
}

function updateLibraryFolder(folder,oldfolder,restorescroll){
  $.get(libraryURL + "?folder=" + encodeURIComponent(folder))
  .done(function(data) {
    $('#LIBRARY').html(data).scrollTop(0);
    if(restorescroll)$('#LIBRARY').scrollTop(scrollPos.pop());
    $('#LIBRARY').css({"opacity":1});
    updateLocationBar();
  })
  .fail(function(){
    $('#LIBRARY').html('<p class="errormessage">' + erroricon + 'ERROR: Could not open "'+libraryURL + "?folder=" + encodeURIComponent(folder) + '"</p>');
    currentpath=oldfolder;
    $('#LIBRARY').css({"opacity":1});
  });
}

function getPresets(){
  $.get(http_host + "/stations")
  .done(function(data){
    var stations = data.split('\n');
    $('#WEBRADIO').html('');
    stations.forEach(function(item){
      if(item)$('#WEBRADIO').append('<p class="streamlink"><img src="/radioicon.svg" class="icon"><img src="/starticon.svg" class="icon starticon"><span class="text">' + item + '</span></p>');
    })
  })
  .fail(function(){
    $('#WEBRADIO').html('<p class="errormessage">' + erroricon + 'ERROR: Could not open station list</p>');
  });
}

var overlaytimer;
function setOverlayTimeOut() {
  clearTimeout(overlaytimer);
  overlaytimer = setTimeout(function(){$('#overlay').css('display', 'block');}, 6000);
}

function showMessage(message){
  $('#infobar').css("opacity","1");
  $('#infobar').html(message).animate({"opacity":"0"},{queue:false,duration:2000});
}

function refreshAllTabs() {
  $.get(http_host + "/scripturl")
  .done(function(data){
    libraryURL = data;
    console.log('script url: ' + data);
    updateLibraryFolder(currentpath);
  })
  .fail(function(data){
    console.log("could not get script url");
  })
  .always(function(){
    setOverlayTimeOut();
    getPresets();
  })
}

const removebutton='<img src="/deleteicon.svg" class="icon deletebutton"/>';

$(document).ready(function(){
  var waitForData = true;
  const addicon = '<svg class="icon" id="addfavorite" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"><path d="M0 0h24v24H0z" fill="none"/><path d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"/></svg>';
  var ws = new ReconnectingWebSocket(ws_host, null, {debug: false, reconnectInterval: 3500});

  ws.onmessage = function(e){
    var command = e.data.split("\n");
    switch(command[0]){
      case "currentPLitem":
        $('.plitem').css("background-color","");
        if(-1 == command[1]){
          $('#playerstatus, #showstation').html("Nothing playing");
        }else{
          $('.plitem').eq(command[1]).css("background-color","cadetblue");
        }
      break;
      case "playlist":
        $('#PLAYLIST').html('');
        console.log("Items in playlist:" + (command.length - 2) / 2);
        var typeicon = "";
        for (var i = 1; i < command.length - 1; i = i + 2){
          switch (command[i + 1]){
            case "FILE" :
              typeicon = '<img src="/libraryicon.svg" class="icon">';
              break;
            case "STREAM" :
              typeicon = '<img src="/streamicon.svg" class="icon">';
              break;
            case "FAVO" :
              typeicon = '<img src="/favoriteicon.svg" class="icon">';
              break;
            case "PRESET" :
              typeicon = '<img src="/radioicon.svg" class="icon">';
              break;
            default :
              typeicon = "";
              break;
          }
          $('#PLAYLIST').append('<p class="plitem">' + removebutton + typeicon + '<span class="text">' + command[i] + '</span></p>');
        }
      break;
      case "message":
        showMessage(command[1]);
      break;

      case "volume":
        if (command[1])$('#volumeslider').val(command[1]);
      break;

      case "showstation":
        $('#playerstatus, #showstation').html(command[1]);
        if (command[2] == "STREAM" || command[2] == "FAVO") $('#showstation').prepend(addicon);
      break;

      case "streamtitle":
        $('#streamtitle').html(command[1]);
      break;

      case "progress":
        console.log(command[1]);
        var now = new Date();
        now.setSeconds(command[1]);
        console.log(now.toISOString().substr(11, 8));
      break;
/*
      case "bitrate":
        if(command[1])$('#bitrate').html("Bitrate: "+command[1]+"kbps");
      break;

      case "streaminfo":
        $('#streaminfo').html(command[1]);
      break;
*/
      case "favorites":
        var content = [];
        for(i = 1; i < command.length - 1; i++)
          content.push('<p class="favoritelink">' + removebutton + '<img src="/starticon.svg" class="icon starticon"><span class="text">' + command[i].substring(1) + '</span></p>');
        content.sort();
        $('#FAVORITES').html(content);
      break
      default:break;
    }
  };

  ws.onopen = function(event){
    console.log('[WebSocket] Connected');
    $('#showstation').html('');
    $('#streamtitle').html('');
    refreshAllTabs();
  }

  ws.onclose = function(event){
    console.log('[WebSocket] Connection died, code=' + event.code + ' reason=' + event.reason);
    $('#PLAYLIST').html('<p class="errormessage">'+ erroricon + 'No WS connection. Reconnecting...</p>');
    ws.open();
  }

  ws.onerror = function(error){
    console.log('[WebSocket] Error: ' + error.message);
    ws.refresh();
  }

  $('.tablinks').on('click', function(){
    $('.tablinks').css("background-color", "");
    $(this).css("background-color", "darkgrey")
    switch($(this).text()){
      case 'LIBRARY':
        $('#WEBRADIO, #FAVORITES').hide();
        $('#LIBRARY, #PLAYLIST').show();
      break;
      case 'WEBRADIO':
        $('#LIBRARY, #FAVORITES').hide();
        $('#WEBRADIO, #PLAYLIST').show();
      break;
      case 'FAVORITES':
        $('#LIBRARY, #WEBRADIO').hide();
        $('#FAVORITES, #PLAYLIST').show();
      break;
      default:
    }
  });

  $('body').on('click','#uplink', function(){
    $('#LIBRARY').css({"opacity":0.5});
    const oldpath = currentpath;
    if(currentpath.includes('/'))currentpath = currentpath.split('/').slice(0,-1).join('/');
    if(!currentpath) currentpath = '/';
    updateLibraryFolder(currentpath,oldpath,true);
  });

  $('body').on('click','.folderlink', function(){
    $('#LIBRARY').css({"opacity":0.5});
    const oldpath = currentpath;
    if ('/' != currentpath) currentpath += '/';
    currentpath += $(this).text();
    scrollPos.push($('#LIBRARY').scrollTop());
    updateLibraryFolder(currentpath, oldpath);
  });

  $('body').on('click','.filelink',function(e){
    ws.send("filetoplaylist\n" + libraryURL.substring(0, libraryURL.lastIndexOf('/')) + currentpath+'/'+$(this).text());
    e.stopPropagation();
  });

  $('body').on('click','.filelink .starticon',function(e){
    ws.send("_filetoplaylist\n"+libraryURL.substring(0,libraryURL.lastIndexOf('/',)) + currentpath + '/'+$(this).parent().text());
    e.stopPropagation();
  });

  $('body').on('click','.streamlink .starticon',function(e){
    ws.send("_presetstation\n" + $(this).parent().index());
    e.stopPropagation();
  });

  $('body').on('click','.favoritelink',function(e){
    ws.send("favoritetoplaylist\n" + $(this).text());
    e.stopPropagation();
  });

  $('body').on('click','.favoritelink .starticon',function(e){
    ws.send("_favoritetoplaylist\n" + $(this).parent().text());
    e.stopPropagation();
  });

  $('body').on('click','.favoritelink .deletebutton',function(e){
    e.stopPropagation();
    if(!confirm("Are you sure to delete this favorite?"))return;
    ws.send("deletefavorite\n" + ($(this).parent().text()));
  });

  $('body').on('click','.addfolder, .folderlink .starticon',function(e){
    //TODO: something goes wrong here!
    // we have to check in the .done callback if there are multiple '/' chars at the start of the path
    var location = libraryURL.substring(0, libraryURL.lastIndexOf('/', libraryURL.length));
    var requestpath = currentpath + "/" + $(this).parent().text();
    var content = ($(this).hasClass('starticon')) ? "_filetoplaylist\n" : "filetoplaylist\n";
    $.get(libraryURL + "?folder=" + encodeURIComponent(currentpath) + "/" + encodeURIComponent($(this).parent().text()))
    .done(function(data){
      //make an invisible navList
      const nList = document.createElement("div");
      nList.style.display = "none";
      nList.id = "invisFolder";
      document.body.appendChild(nList);
      $(nList).html(data);
      if(requestpath.startsWith("//"))requestpath = requestpath.substring(1);  //TODO: FIX! see above
      $('#invisFolder .filelink').each(function(){
        content += location+requestpath+'/'+$(this).text()+"\n";
      });
      document.body.removeChild(nList);
      ws.send(content);
    });
    e.stopPropagation();
  });

  $('body').on('click','.plitem',function(){
    ws.send("playitem\n" + ($(this).index('.plitem')-1));
  });

  $('body').on('click','.plitem .deletebutton',function(e){
    ws.send("deleteitem\n" + ($(this).index('.deletebutton')));
    e.stopPropagation();
  });

  $('body').on('click','#pausebutton',function(){
    ws.send("pause\n");
  });

  $('body').on('click','#playbutton',function(){
    ws.send("play\n");
  });

  $('body').on('click','#previousbutton',function(){
    ws.send("previous\n");
  });

  $('body').on('click','#nextbutton',function(){
    ws.send("next\n");
  });

  $('body').on('click','#clearbutton',function(){
    ws.send("clearlist\n");
  });

  $('body').on('click','.streamlink',function(){
    ws.send("presetstation\n" + $(this).index());
  });

  $('#newurl').on('keydown', function(e) {
    if(e.which == 13)$('#newurlbutton').click();
  });

  $('body').on('click','#newurlbutton',function(){
    if(!$('#newurl').val())return;
    var newurl = ($('#newurl').val().startsWith('https:')) ? 'http' + $('#newurl').val().substring(5) : $('#newurl').val();
    ws.send("newurl\n" + newurl.trim());
    $('#newurl').val('');
  });

  $('#overlay').on('mouseup','#addfavorite',function(e){
    e.stopPropagation();
    const filename = prompt("Enter a filename", $('#showstation').text());
    if (!filename) return;
    if (! /^[^\\/:\*\?"<>\|]+$/.test(filename)) {
      showMessage("not saved - illegal char in name");
      return;
    }
    ws.send("currenttofavorites\n" + filename);
  });

  $('body').on('change','#volumeslider',function(e){
    ws.send("volume\n" + this.value);
  });

  $('#overlay').on('mouseup', function(){
    $(this).hide();
  });

  $('html').on('mouseover mousedown mouseup mousewheel mousemove input scroll resize contextmenu touchstart touchend touchmove touchcancel', function() {
    setOverlayTimeOut();
  });

  document.addEventListener('visibilitychange', e =>{
    if (document.visibilityState === 'visible')
      refreshAllTabs();
  });

  $('#newurlbar').css('bottom',$('#controlpanel').css('height'));
  $('.tabcontent').css('top',$('.tab').height() + ($('#locationbar').height() + $('#infobar').height()) + "px");
  $('.tabcontent').css('bottom',$('#controlpanel').height() + $('#newurlbar').height() + "px");

  $('.tablinks').first().click();
});
</script>
</body>
</html>
